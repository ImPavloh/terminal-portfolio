---
import TerminalContent from './TerminalContent.astro'
---

<div class="terminal">
  <div class="terminal-header">
    <div class="window-buttons">
      <div class="button close" title="Close"></div>
      <div class="button minimize" title="Minimize"></div>
      <div class="button maximize" title="Maximize"></div>
    </div>
    <div class="terminal-title">
      <span class="terminal-icon">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="14"
          height="14"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
        >
          <polyline points="4 17 10 11 4 5"></polyline>
          <line x1="12" y1="19" x2="20" y2="19"></line>
        </svg>
      </span>
      terminal ~ sh.pavloh.com
    </div>
  </div>

  <div class="terminal-tabs">
    <div class="tab active">Main</div>
    <div class="tab">Process</div>
    <div class="tab">Logs</div>
    <div class="new-tab">+</div>
  </div>

  <div class="terminal-content">
    <div class="terminal-output">
      <div class="command-input">
        <span class="prompt">user@pavloh:</span><span class="domain">~$ </span>
        <span id="typed-command"></span><span class="cursor"></span>
      </div>
      <TerminalContent />
    </div>
  </div>

  <div class="terminal-statusbar">
    <div class="status-item">bash</div>
    <div class="status-item">UTF-8</div>
    <div class="status-item">
      <span class="status-icon success"></span> Connected
    </div>
    <div class="status-item right">v1.0.1</div>
  </div>
</div>

<script>
  // animacion de escritura (cada 3 segundos cambia el comando)
  document.addEventListener('DOMContentLoaded', () => {
    const typedCommand = document.getElementById('typed-command')
    const commands = [
      'curl https://sh.pavloh.com',
      'curl https://ps1.pavloh.com',
      'curl https://bash.pavloh.com',
      'curl https://bat.pavloh.com',
      'curl https://terminal.pavloh.com',
      'curl https://cli.pavloh.com',
    ]
    let currentCommand = commands[Math.floor(Math.random() * commands.length)]
    let i = 0

    function typeCommand() {
      if (i < currentCommand.length && typedCommand) {
        typedCommand.textContent += currentCommand.charAt(i)
        i++
        setTimeout(typeCommand, Math.random() * 100 + 50)
      } else {
        setTimeout(() => {
          i = 0
          if (typedCommand) {
            typedCommand.textContent = ''
          }
          currentCommand = commands[Math.floor(Math.random() * commands.length)]
          typeCommand()
        }, 3000)
      }
    }

    typeCommand()
  })
</script>

<style>
  .terminal {
    background-color: var(--terminal-bg, #0d1117);
    border-radius: 10px;
    border: 1px solid var(--border-color, #30363d);
    overflow: hidden;
    box-shadow: 0 6px 30px rgba(0, 0, 0, 0.6);
    margin-bottom: 2rem;
    display: flex;
    flex-direction: column;
    max-height: 70vh;
  }

  .terminal-header {
    background-color: #161b22;
    padding: 8px 16px;
    display: flex;
    align-items: center;
    border-bottom: 1px solid var(--border-color, #30363d);
  }

  .window-buttons {
    display: flex;
    gap: 8px;
    margin-right: 16px;
  }

  .button {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    transition: all 0.2s ease;
  }

  .button:hover {
    transform: scale(1.1);
  }

  .button.close {
    background-color: var(--danger-color, #e25a5a);
  }
  .button.minimize {
    background-color: var(--warning-color, #e2c75a);
  }
  .button.maximize {
    background-color: var(--success-color, #5ae25a);
  }

  .terminal-title {
    flex-grow: 1;
    text-align: center;
    font-size: 14px;
    color: var(--text-secondary, #8b949e);
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 6px;
  }

  .terminal-icon {
    display: flex;
    align-items: center;
    color: var(--text-secondary, #8b949e);
  }

  .terminal-tabs {
    display: flex;
    background-color: #0d1117;
    border-bottom: 1px solid var(--border-color, #30363d);
    overflow-x: auto;
    scrollbar-width: none;
  }

  .tab,
  .new-tab {
    padding: 8px 16px;
    font-size: 12px;
    color: var(--text-secondary, #8b949e);
    cursor: pointer;
    transition: all 0.2s ease;
    user-select: none;
  }

  .tab {
    border-right: 1px solid var(--border-color, #30363d);
  }

  .tab:hover,
  .new-tab:hover {
    background-color: rgba(255, 255, 255, 0.05);
  }

  .tab.active {
    background-color: var(--terminal-bg, #0d1117);
    color: var(--text-color, #c9d1d9);
    border-bottom: 2px solid var(--primary-color, #58a6ff);
  }

  .new-tab {
    padding: 8px 12px;
    font-size: 14px;
  }

  .new-tab:hover {
    color: var(--text-color, #c9d1d9);
  }

  .terminal-content {
    font-size: 0;
    padding-left: 16px;
    overflow-x: auto;
    white-space: pre-wrap;
    line-height: 1.5;
    flex: 1;
    overflow-y: auto;
    position: relative;
  }

  .terminal-content::-webkit-scrollbar {
    width: 8px;
    height: 8px;
  }

  .terminal-content::-webkit-scrollbar-track {
    background: transparent;
  }

  .terminal-content::-webkit-scrollbar-thumb {
    background-color: rgba(255, 255, 255, 0.2);
    border-radius: 4px;
  }

  .terminal-content::-webkit-scrollbar-thumb:hover {
    background-color: rgba(255, 255, 255, 0.3);
  }

  .terminal-output {
    color: var(--text-color, #c9d1d9);
    font-size: 0.9rem;
    line-height: 1.4;
  }

  .history-line {
    display: flex;
  }

  .output-line {
    margin-bottom: 12px;
    color: var(--text-secondary, #8b949e);
    padding-left: 16px;
  }

  .command-input {
    display: flex;
  }

  .prompt {
    color: var(--success-color, #5ae25a);
  }

  .domain {
    color: var(--primary-color, #58a6ff);
    margin-right: 8px;
  }

  #typed-command {
    color: var(--text-color, #c9d1d9);
  }

  .cursor {
    display: inline-block;
    width: 8px;
    height: 16px;
    background-color: var(--accent-color, #79c0ff);
    animation: blink 1s infinite;
    vertical-align: middle;
    margin-left: 2px;
  }

  @keyframes blink {
    0%,
    49% {
      opacity: 1;
    }
    50%,
    100% {
      opacity: 0;
    }
  }

  .terminal-statusbar {
    display: flex;
    background-color: #161b22;
    border-top: 1px solid var(--border-color, #30363d);
    padding: 4px 16px;
    font-size: 12px;
    color: var(--text-secondary, #8b949e);
  }

  .status-item {
    margin-right: 16px;
    display: flex;
    align-items: center;
  }

  .status-item.right {
    margin-left: auto;
    margin-right: 0;
  }

  .status-icon {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    margin: 0 6px 3px 0;
  }

  .status-icon.success {
    background-color: var(--success-color, #5ae25a);
  }

  @media (max-width: 768px) {
    .terminal-content {
      padding-left: 12px;
    }

    .terminal-output {
      font-size: 0.8rem;
      line-height: 1.3;
    }

    .tab,
    .new-tab {
      padding: 6px 12px;
    }
  }

  @media (max-width: 480px) {
    .terminal-content {
      padding-left: 10px;
    }

    .terminal-output {
      font-size: 0.7rem;
    }

    .window-buttons {
      margin-right: 10px;
    }

    .button {
      width: 10px;
      height: 10px;
    }
  }
</style>
